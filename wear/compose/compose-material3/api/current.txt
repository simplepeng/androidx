// Signature format: 4.0
package androidx.wear.compose.material3 {

  public final class AlertDialogDefaults {
    method @androidx.compose.runtime.Composable public void ConfirmButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.IconButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public void DismissButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.IconButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public void EdgeButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public void GroupSeparator();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues confirmDismissContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentPadding();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getConfirmIcon();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getDismissIcon();
    method public androidx.compose.foundation.layout.Arrangement.Vertical getVerticalArrangement();
    property public final kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> ConfirmIcon;
    property public final kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> DismissIcon;
    property public final androidx.compose.foundation.layout.Arrangement.Vertical VerticalArrangement;
    field public static final androidx.wear.compose.material3.AlertDialogDefaults INSTANCE;
  }

  public final class AlertDialogKt {
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> confirmButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> dismissButton, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> confirmButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> dismissButton, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
  }

  @kotlin.jvm.JvmInline public final value class AngularDirection {
    field public static final androidx.wear.compose.material3.AngularDirection.Companion Companion;
  }

  public static final class AngularDirection.Companion {
    method public int getClockwise();
    method public int getCounterClockwise();
    property public final int Clockwise;
    property public final int CounterClockwise;
  }

  @RequiresApi(31) public final class AnimatedTextDefaults {
    property public static final int CacheSize;
    field public static final int CacheSize = 5; // 0x5
    field public static final androidx.wear.compose.material3.AnimatedTextDefaults INSTANCE;
  }

  @RequiresApi(31) public final class AnimatedTextFontRegistry {
    ctor public AnimatedTextFontRegistry(androidx.compose.ui.text.TextStyle textStyle, androidx.compose.ui.text.font.FontVariation.Settings startFontVariationSettings, androidx.compose.ui.text.font.FontVariation.Settings endFontVariationSettings, long startFontSize, long endFontSize, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.FontFamily.Resolver fontFamilyResolver, optional long contentColor, optional int cacheSize);
  }

  public final class AnimatedTextKt {
    method @RequiresApi(31) @androidx.compose.runtime.Composable public static void AnimatedText(String text, androidx.wear.compose.material3.AnimatedTextFontRegistry fontRegistry, kotlin.jvm.functions.Function0<java.lang.Float> progressFraction, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment);
    method @RequiresApi(31) @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.AnimatedTextFontRegistry rememberAnimatedTextFontRegistry(androidx.compose.ui.text.font.FontVariation.Settings startFontVariationSettings, androidx.compose.ui.text.font.FontVariation.Settings endFontVariationSettings, optional androidx.compose.ui.text.TextStyle textStyle, optional long startFontSize, optional long endFontSize);
  }

  public final class AppScaffoldKt {
    method @androidx.compose.runtime.Composable public static void AppScaffold(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> timeText, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class ArcProgressIndicatorDefaults {
    method public float calculateRecommendedGapSize(float strokeWidth);
    method public float getIndeterminateEndAngle();
    method public float getIndeterminateStartAngle();
    method public float getIndeterminateStrokeWidth();
    method @androidx.compose.runtime.Composable public float getRecommendedIndeterminateDiameter();
    property public final float IndeterminateEndAngle;
    property public final float IndeterminateStartAngle;
    property public final float IndeterminateStrokeWidth;
    property @androidx.compose.runtime.Composable public final float recommendedIndeterminateDiameter;
    field public static final androidx.wear.compose.material3.ArcProgressIndicatorDefaults INSTANCE;
  }

  public final class ArcProgressIndicatorKt {
    method @androidx.compose.runtime.Composable public static void ArcProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional float startAngle, optional float endAngle, optional int angularDirection, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize);
  }

  @androidx.compose.runtime.Immutable public final class ButtonColors {
    ctor public ButtonColors(androidx.compose.ui.graphics.painter.Painter containerPainter, long contentColor, long secondaryContentColor, long iconColor, androidx.compose.ui.graphics.painter.Painter disabledContainerPainter, long disabledContentColor, long disabledSecondaryContentColor, long disabledIconColor);
    ctor public ButtonColors(long containerColor, long contentColor, long secondaryContentColor, long iconColor, long disabledContainerColor, long disabledContentColor, long disabledSecondaryContentColor, long disabledIconColor);
    method public androidx.wear.compose.material3.ButtonColors copy(optional long containerColor, optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContainerColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    method public androidx.compose.ui.graphics.painter.Painter getContainerPainter();
    method public long getContentColor();
    method public androidx.compose.ui.graphics.painter.Painter getDisabledContainerPainter();
    method public long getDisabledContentColor();
    method public long getDisabledIconColor();
    method public long getDisabledSecondaryContentColor();
    method public long getIconColor();
    method public long getSecondaryContentColor();
    property public final androidx.compose.ui.graphics.painter.Painter containerPainter;
    property public final long contentColor;
    property public final androidx.compose.ui.graphics.painter.Painter disabledContainerPainter;
    property public final long disabledContentColor;
    property public final long disabledIconColor;
    property public final long disabledSecondaryContentColor;
    property public final long iconColor;
    property public final long secondaryContentColor;
  }

  public final class ButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors(optional long containerColor, optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContainerColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors(optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors(optional long containerColor, optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContainerColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors(optional long containerColor, optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContainerColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    method public float getButtonExtraLargeIconStartPadding();
    method public float getButtonHorizontalPadding();
    method public float getButtonLargeIconStartPadding();
    method public float getButtonVerticalPadding();
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithExtraLargeIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithLargeIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getCompactButtonContentPadding();
    method public float getCompactButtonHeight();
    method public float getCompactButtonHorizontalPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getCompactButtonShape();
    method public androidx.compose.foundation.layout.PaddingValues getCompactButtonTapTargetPadding();
    method public float getCompactButtonVerticalPadding();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getExtraLargeIconSize();
    method public float getExtraSmallIconSize();
    method public float getHeight();
    method public float getIconSize();
    method public float getIconSpacing();
    method public float getLargeIconSize();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method public float getSmallIconSize();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors imageBackgroundButtonColors(androidx.compose.ui.graphics.painter.Painter backgroundImagePainter, optional androidx.compose.ui.graphics.Brush backgroundImageScrimBrush, optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor, optional androidx.compose.ui.geometry.Size? forcedSize);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder(boolean enabled, optional long borderColor, optional long disabledBorderColor, optional float borderWidth);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors(optional long contentColor, optional long secondaryContentColor, optional long iconColor, optional long disabledContentColor, optional long disabledSecondaryContentColor, optional long disabledIconColor);
    property public final float ButtonExtraLargeIconStartPadding;
    property public final float ButtonHorizontalPadding;
    property public final float ButtonLargeIconStartPadding;
    property public final float ButtonVerticalPadding;
    property public final androidx.compose.foundation.layout.PaddingValues ButtonWithExtraLargeIconContentPadding;
    property public final androidx.compose.foundation.layout.PaddingValues ButtonWithLargeIconContentPadding;
    property public final androidx.compose.foundation.layout.PaddingValues CompactButtonContentPadding;
    property public final float CompactButtonHeight;
    property public final float CompactButtonHorizontalPadding;
    property public final androidx.compose.foundation.layout.PaddingValues CompactButtonTapTargetPadding;
    property public final float CompactButtonVerticalPadding;
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public final float ExtraLargeIconSize;
    property public final float ExtraSmallIconSize;
    property public final float Height;
    property public final float IconSize;
    property public final float IconSpacing;
    property public final float LargeIconSize;
    property public final float SmallIconSize;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape compactButtonShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.ButtonDefaults INSTANCE;
  }

  public final class ButtonGroupDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues fullWidthPaddings();
    method public float getExpansionWidth();
    method public float getSpacing();
    property public final float ExpansionWidth;
    property public final float Spacing;
    field public static final androidx.wear.compose.material3.ButtonGroupDefaults INSTANCE;
  }

  public final class ButtonGroupKt {
    method @androidx.compose.runtime.Composable public static void ButtonGroup(optional androidx.compose.ui.Modifier modifier, optional float spacing, optional float expansionWidth, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<? super androidx.wear.compose.material3.ButtonGroupScope,kotlin.Unit> content);
  }

  public interface ButtonGroupScope {
    method public androidx.compose.ui.Modifier enlargeOnPress(androidx.compose.ui.Modifier, androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method public androidx.compose.ui.Modifier minWidth(androidx.compose.ui.Modifier, optional float minWidth);
    method public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float weight);
  }

  public final class ButtonKt {
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void CompactButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? label);
    method @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
  }

  @androidx.compose.runtime.Immutable public final class CardColors {
    ctor public CardColors(androidx.compose.ui.graphics.painter.Painter containerPainter, long contentColor, long appNameColor, long timeColor, long titleColor, long subtitleColor);
    method public androidx.wear.compose.material3.CardColors copy(optional long containerColor, optional long contentColor, optional long appNameColor, optional long timeColor, optional long titleColor, optional long subtitleColor);
    method public long getAppNameColor();
    method public androidx.compose.ui.graphics.painter.Painter getContainerPainter();
    method public long getContentColor();
    method public long getSubtitleColor();
    method public long getTimeColor();
    method public long getTitleColor();
    property public final long appNameColor;
    property public final androidx.compose.ui.graphics.painter.Painter containerPainter;
    property public final long contentColor;
    property public final long subtitleColor;
    property public final long timeColor;
    property public final long titleColor;
  }

  public final class CardDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors(optional long containerColor, optional long contentColor, optional long appNameColor, optional long timeColor, optional long titleColor, optional long subtitleColor);
    method public float getAppImageSize();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getHeight();
    method public float getImageBottomPadding();
    method public androidx.compose.foundation.layout.PaddingValues getImageContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors imageCardColors(androidx.compose.ui.graphics.painter.Painter containerPainter, optional long contentColor, optional long appNameColor, optional long timeColor, optional long titleColor, optional long subtitleColor);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter imageWithScrimBackgroundPainter(androidx.compose.ui.graphics.painter.Painter backgroundImagePainter, optional androidx.compose.ui.graphics.Brush backgroundImageScrimBrush, optional androidx.compose.ui.geometry.Size? forcedSize);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedCardBorder(optional long outlineColor, optional float borderWidth);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors(optional long contentColor, optional long appNameColor, optional long timeColor, optional long titleColor, optional long subtitleColor);
    property public final float AppImageSize;
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public final float Height;
    property public final float ImageBottomPadding;
    property public final androidx.compose.foundation.layout.PaddingValues ImageContentPadding;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.wear.compose.material3.CardDefaults INSTANCE;
  }

  public final class CardKt {
    method @androidx.compose.runtime.Composable public static void AppCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> appName, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? appImage, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? time, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void OutlinedCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit>? time, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? subtitle, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function0<kotlin.Unit>? content);
  }

  @androidx.compose.runtime.Immutable public final class CheckboxButtonColors {
    ctor public CheckboxButtonColors(long checkedContainerColor, long checkedContentColor, long checkedSecondaryContentColor, long checkedIconColor, long checkedBoxColor, long checkedCheckmarkColor, long uncheckedContainerColor, long uncheckedContentColor, long uncheckedSecondaryContentColor, long uncheckedIconColor, long uncheckedBoxColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledCheckedSecondaryContentColor, long disabledCheckedIconColor, long disabledCheckedBoxColor, long disabledCheckedCheckmarkColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor, long disabledUncheckedSecondaryContentColor, long disabledUncheckedIconColor, long disabledUncheckedBoxColor);
    method public androidx.wear.compose.material3.CheckboxButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedIconColor, optional long checkedBoxColor, optional long checkedCheckmarkColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedIconColor, optional long uncheckedBoxColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedIconColor, optional long disabledCheckedBoxColor, optional long disabledCheckedCheckmarkColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedIconColor, optional long disabledUncheckedBoxColor);
    method public long getCheckedBoxColor();
    method public long getCheckedCheckmarkColor();
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getCheckedIconColor();
    method public long getCheckedSecondaryContentColor();
    method public long getDisabledCheckedBoxColor();
    method public long getDisabledCheckedCheckmarkColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledCheckedIconColor();
    method public long getDisabledCheckedSecondaryContentColor();
    method public long getDisabledUncheckedBoxColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getDisabledUncheckedIconColor();
    method public long getDisabledUncheckedSecondaryContentColor();
    method public long getUncheckedBoxColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    method public long getUncheckedIconColor();
    method public long getUncheckedSecondaryContentColor();
    property public final long checkedBoxColor;
    property public final long checkedCheckmarkColor;
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long checkedIconColor;
    property public final long checkedSecondaryContentColor;
    property public final long disabledCheckedBoxColor;
    property public final long disabledCheckedCheckmarkColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledCheckedIconColor;
    property public final long disabledCheckedSecondaryContentColor;
    property public final long disabledUncheckedBoxColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long disabledUncheckedIconColor;
    property public final long disabledUncheckedSecondaryContentColor;
    property public final long uncheckedBoxColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
    property public final long uncheckedIconColor;
    property public final long uncheckedSecondaryContentColor;
  }

  public final class CheckboxButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedIconColor, optional long checkedBoxColor, optional long checkedCheckmarkColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedIconColor, optional long uncheckedBoxColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedIconColor, optional long disabledCheckedBoxColor, optional long disabledCheckedCheckmarkColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedIconColor, optional long disabledUncheckedBoxColor);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getCheckboxButtonShape();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitCheckboxButtonShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedSplitContainerColor, optional long checkedBoxColor, optional long checkedCheckmarkColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedSplitContainerColor, optional long uncheckedBoxColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedSplitContainerColor, optional long disabledCheckedBoxColor, optional long disabledCheckedCheckmarkColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedSplitContainerColor, optional long disabledUncheckedBoxColor);
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape checkboxButtonShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape splitCheckboxButtonShape;
    field public static final androidx.wear.compose.material3.CheckboxButtonDefaults INSTANCE;
  }

  public final class CheckboxButtonKt {
    method @androidx.compose.runtime.Composable public static void CheckboxButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CheckboxButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void SplitCheckboxButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, String? toggleContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitCheckboxButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? toggleInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
  }

  public final class CircularProgressIndicatorDefaults {
    method public float calculateRecommendedGapSize(float strokeWidth);
    method public float getFullScreenPadding();
    method public float getIndeterminateStrokeWidth();
    method @androidx.compose.runtime.Composable public float getLargeStrokeWidth();
    method @androidx.compose.runtime.Composable public float getSmallStrokeWidth();
    method public float getStartAngle();
    property public final float FullScreenPadding;
    property public final float IndeterminateStrokeWidth;
    property public final float StartAngle;
    property @androidx.compose.runtime.Composable public final float largeStrokeWidth;
    property @androidx.compose.runtime.Composable public final float smallStrokeWidth;
    field public static final androidx.wear.compose.material3.CircularProgressIndicatorDefaults INSTANCE;
  }

  public final class CircularProgressIndicatorKt {
    method @androidx.compose.runtime.Composable public static void CircularProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize);
    method @androidx.compose.runtime.Composable public static void CircularProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize, optional boolean enabled);
    method @androidx.compose.runtime.Composable public static void CircularProgressIndicatorStatic(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize, optional boolean enabled, optional float overflowColorAlphaFraction, optional kotlin.jvm.functions.Function0<java.lang.Float>? targetProgress);
  }

  @androidx.compose.runtime.Immutable @androidx.compose.runtime.Stable public final class ColorScheme {
    ctor public ColorScheme();
    ctor public ColorScheme(optional long primary, optional long primaryDim, optional long primaryContainer, optional long onPrimary, optional long onPrimaryContainer, optional long secondary, optional long secondaryDim, optional long secondaryContainer, optional long onSecondary, optional long onSecondaryContainer, optional long tertiary, optional long tertiaryDim, optional long tertiaryContainer, optional long onTertiary, optional long onTertiaryContainer, optional long surfaceContainerLow, optional long surfaceContainer, optional long surfaceContainerHigh, optional long onSurface, optional long onSurfaceVariant, optional long outline, optional long outlineVariant, optional long background, optional long onBackground, optional long error, optional long onError, optional long errorContainer, optional long onErrorContainer);
    method public androidx.wear.compose.material3.ColorScheme copy(optional long primary, optional long primaryDim, optional long primaryContainer, optional long onPrimary, optional long onPrimaryContainer, optional long secondary, optional long secondaryDim, optional long secondaryContainer, optional long onSecondary, optional long onSecondaryContainer, optional long tertiary, optional long tertiaryDim, optional long tertiaryContainer, optional long onTertiary, optional long onTertiaryContainer, optional long surfaceContainerLow, optional long surfaceContainer, optional long surfaceContainerHigh, optional long onSurface, optional long onSurfaceVariant, optional long outline, optional long outlineVariant, optional long background, optional long onBackground, optional long error, optional long onError, optional long errorContainer, optional long onErrorContainer);
    method public long getBackground();
    method public long getError();
    method public long getErrorContainer();
    method public long getOnBackground();
    method public long getOnError();
    method public long getOnErrorContainer();
    method public long getOnPrimary();
    method public long getOnPrimaryContainer();
    method public long getOnSecondary();
    method public long getOnSecondaryContainer();
    method public long getOnSurface();
    method public long getOnSurfaceVariant();
    method public long getOnTertiary();
    method public long getOnTertiaryContainer();
    method public long getOutline();
    method public long getOutlineVariant();
    method public long getPrimary();
    method public long getPrimaryContainer();
    method public long getPrimaryDim();
    method public long getSecondary();
    method public long getSecondaryContainer();
    method public long getSecondaryDim();
    method public long getSurfaceContainer();
    method public long getSurfaceContainerHigh();
    method public long getSurfaceContainerLow();
    method public long getTertiary();
    method public long getTertiaryContainer();
    method public long getTertiaryDim();
    property public final long background;
    property public final long error;
    property public final long errorContainer;
    property public final long onBackground;
    property public final long onError;
    property public final long onErrorContainer;
    property public final long onPrimary;
    property public final long onPrimaryContainer;
    property public final long onSecondary;
    property public final long onSecondaryContainer;
    property public final long onSurface;
    property public final long onSurfaceVariant;
    property public final long onTertiary;
    property public final long onTertiaryContainer;
    property public final long outline;
    property public final long outlineVariant;
    property public final long primary;
    property public final long primaryContainer;
    property public final long primaryDim;
    property public final long secondary;
    property public final long secondaryContainer;
    property public final long secondaryDim;
    property public final long surfaceContainer;
    property public final long surfaceContainerHigh;
    property public final long surfaceContainerLow;
    property public final long tertiary;
    property public final long tertiaryContainer;
    property public final long tertiaryDim;
  }

  public final class ColorSchemeKt {
    method public static long contentColorFor(androidx.wear.compose.material3.ColorScheme, long backgroundColor);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static long contentColorFor(long backgroundColor);
  }

  public final class ConfirmationDialogColors {
    ctor public ConfirmationDialogColors(long iconColor, long iconContainerColor, long textColor);
    method public androidx.wear.compose.material3.ConfirmationDialogColors copy(optional long iconColor, optional long iconContainerColor, optional long textColor);
    method public long getIconColor();
    method public long getIconContainerColor();
    method public long getTextColor();
    property public final long iconColor;
    property public final long iconContainerColor;
    property public final long textColor;
  }

  public final class ConfirmationDialogDefaults {
    method @androidx.compose.runtime.Composable public void FailureIcon();
    method @androidx.compose.runtime.Composable public void SuccessIcon();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors(optional long iconColor, optional long iconContainerColor, optional long textColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors(optional long iconColor, optional long iconContainerColor, optional long textColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle getCurvedTextStyle();
    method public float getIconSize();
    method public float getSmallIconSize();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors(optional long iconColor, optional long iconContainerColor, optional long textColor);
    property public static final long DurationMillis;
    property public final float IconSize;
    property public final float SmallIconSize;
    property @androidx.compose.runtime.Composable public final androidx.wear.compose.foundation.CurvedTextStyle curvedTextStyle;
    field public static final long DurationMillis = 4000L; // 0xfa0L
    field public static final androidx.wear.compose.material3.ConfirmationDialogDefaults INSTANCE;
  }

  public final class ConfirmationDialogKt {
    method @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? text, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? text, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void FailureConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void FailureConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void SuccessConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void SuccessConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public static void confirmationDialogCurvedText(androidx.wear.compose.foundation.CurvedScope, String text, androidx.wear.compose.foundation.CurvedTextStyle style);
  }

  public final class ContentColorKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalContentColor();
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalContentColor;
  }

  public final class CurvedTextDefaults {
    method @androidx.compose.runtime.Composable public long backgroundColor();
    property public static final float ScrollableContentMaxSweepAngle;
    property public static final float StaticContentMaxSweepAngle;
    field public static final androidx.wear.compose.material3.CurvedTextDefaults INSTANCE;
    field public static final float ScrollableContentMaxSweepAngle = 70.0f;
    field public static final float StaticContentMaxSweepAngle = 120.0f;
  }

  public final class CurvedTextKt {
    method public static void curvedText(androidx.wear.compose.foundation.CurvedScope, String text, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional float maxSweepAngle, optional long background, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.wear.compose.foundation.CurvedTextStyle? style, optional androidx.wear.compose.foundation.CurvedDirection.Angular? angularDirection, optional int overflow);
  }

  @androidx.compose.runtime.Immutable public final class DatePickerColors {
    ctor public DatePickerColors(long activePickerContentColor, long inactivePickerContentColor, long invalidPickerContentColor, long pickerLabelColor, long nextButtonContentColor, long nextButtonContainerColor, long confirmButtonContentColor, long confirmButtonContainerColor);
    method public androidx.wear.compose.material3.DatePickerColors copy(optional long activePickerContentColor, optional long inactivePickerContentColor, optional long invalidPickerContentColor, optional long pickerLabelColor, optional long nextButtonContentColor, optional long nextButtonContainerColor, optional long confirmButtonContentColor, optional long confirmButtonContainerColor);
    method public long getActivePickerContentColor();
    method public long getConfirmButtonContainerColor();
    method public long getConfirmButtonContentColor();
    method public long getInactivePickerContentColor();
    method public long getInvalidPickerContentColor();
    method public long getNextButtonContainerColor();
    method public long getNextButtonContentColor();
    method public long getPickerLabelColor();
    property public final long activePickerContentColor;
    property public final long confirmButtonContainerColor;
    property public final long confirmButtonContentColor;
    property public final long inactivePickerContentColor;
    property public final long invalidPickerContentColor;
    property public final long nextButtonContainerColor;
    property public final long nextButtonContentColor;
    property public final long pickerLabelColor;
  }

  public final class DatePickerDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors(optional long activePickerContentColor, optional long inactivePickerContentColor, optional long invalidPickerContentColor, optional long pickerLabelColor, optional long nextButtonContentColor, optional long nextButtonContainerColor, optional long confirmButtonContentColor, optional long confirmButtonContainerColor);
    method @androidx.compose.runtime.Composable public int getDatePickerType();
    property @androidx.compose.runtime.Composable public final int datePickerType;
    field public static final androidx.wear.compose.material3.DatePickerDefaults INSTANCE;
  }

  public final class DatePickerKt {
    method @RequiresApi(android.os.Build.VERSION_CODES.O) @androidx.compose.runtime.Composable public static void DatePicker(java.time.LocalDate initialDate, kotlin.jvm.functions.Function1<? super java.time.LocalDate,kotlin.Unit> onDatePicked, optional androidx.compose.ui.Modifier modifier, optional java.time.LocalDate? minValidDate, optional java.time.LocalDate? maxValidDate, optional int datePickerType, optional androidx.wear.compose.material3.DatePickerColors colors);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DatePickerType {
    field public static final androidx.wear.compose.material3.DatePickerType.Companion Companion;
  }

  public static final class DatePickerType.Companion {
    method public int getDayMonthYear();
    method public int getMonthDayYear();
    method public int getYearMonthDay();
    property public final int DayMonthYear;
    property public final int MonthDayYear;
    property public final int YearMonthDay;
  }

  public final class DialogKt {
    method @androidx.compose.runtime.Composable public static void Dialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class DynamicColorSchemeKt {
    method public static androidx.wear.compose.material3.ColorScheme? dynamicColorScheme(android.content.Context context);
  }

  public final class EdgeButtonDefaults {
    method public float getExtraSmallIconSize();
    method public float getLargeIconSize();
    method public float getMediumIconSize();
    method public float getSmallIconSize();
    method public float iconSizeFor(float edgeButtonSize);
    property public final float ExtraSmallIconSize;
    property public final float LargeIconSize;
    property public final float MediumIconSize;
    property public final float SmallIconSize;
    field public static final androidx.wear.compose.material3.EdgeButtonDefaults INSTANCE;
  }

  public final class EdgeButtonKt {
    method @androidx.compose.runtime.Composable public static void EdgeButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional float buttonSize, optional boolean enabled, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
  }

  @kotlin.jvm.JvmInline public final value class EdgeButtonSize {
    field public static final androidx.wear.compose.material3.EdgeButtonSize.Companion Companion;
  }

  public static final class EdgeButtonSize.Companion {
    method public float getExtraSmall();
    method public float getLarge();
    method public float getMedium();
    method public float getSmall();
    property public final float ExtraSmall;
    property public final float Large;
    property public final float Medium;
    property public final float Small;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This Wear Material3 API is experimental and is likely to change or to be removed in" + " the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalWearMaterial3Api {
  }

  @androidx.compose.runtime.Immutable public final class IconButtonColors {
    ctor public IconButtonColors(long containerColor, long contentColor, long disabledContainerColor, long disabledContentColor);
    method public androidx.wear.compose.material3.IconButtonColors copy(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method public long getContainerColor();
    method public long getContentColor();
    method public long getDisabledContainerColor();
    method public long getDisabledContentColor();
    property public final long containerColor;
    property public final long contentColor;
    property public final long disabledContainerColor;
    property public final long disabledContentColor;
  }

  public final class IconButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape shape, optional androidx.compose.foundation.shape.CornerBasedShape pressedShape);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method public float getDefaultButtonSize();
    method public float getDefaultIconSize();
    method public float getDisabledImageOpacity();
    method public float getExtraSmallButtonSize();
    method public float getLargeButtonSize();
    method public float getLargeIconSize();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method public float getSmallButtonSize();
    method public float getSmallIconSize();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method public float iconSizeFor(float buttonSize);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors(optional long contentColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes shapes(optional androidx.compose.ui.graphics.Shape shape);
    property public final float DefaultButtonSize;
    property public final float DefaultIconSize;
    property public final float DisabledImageOpacity;
    property public final float ExtraSmallButtonSize;
    property public final float LargeButtonSize;
    property public final float LargeIconSize;
    property public final float SmallButtonSize;
    property public final float SmallIconSize;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.IconButtonDefaults INSTANCE;
  }

  public final class IconButtonKt {
    method @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class IconButtonShapes {
    ctor public IconButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape? pressed);
    method public androidx.wear.compose.material3.IconButtonShapes copy(optional androidx.compose.ui.graphics.Shape default, optional androidx.compose.ui.graphics.Shape? pressed);
    method public androidx.compose.ui.graphics.Shape? getPressed();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public final androidx.compose.ui.graphics.Shape? pressed;
    property public final androidx.compose.ui.graphics.Shape shape;
  }

  public final class IconKt {
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
  }

  @androidx.compose.runtime.Immutable public final class IconToggleButtonColors {
    ctor public IconToggleButtonColors(long checkedContainerColor, long checkedContentColor, long uncheckedContainerColor, long uncheckedContentColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor);
    method public androidx.wear.compose.material3.IconToggleButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor);
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
  }

  public final class IconToggleButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape shape, optional androidx.compose.foundation.shape.CornerBasedShape pressedShape);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape();
    method public float getDefaultButtonSize();
    method public float getDefaultIconSize();
    method public float getExtraLargeButtonSize();
    method public float getExtraLargeIconSize();
    method public float getLargeButtonSize();
    method public float getLargeIconSize();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method public float getPressedShapeCornerSizeFraction();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method public float getSmallButtonSize();
    method public float getSmallIconSize();
    method public float iconSizeFor(float buttonSize);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors iconToggleButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors iconToggleButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes shapes(optional androidx.compose.ui.graphics.Shape shape);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes variantAnimatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape uncheckedShape, optional androidx.compose.foundation.shape.CornerBasedShape checkedShape, optional float pressedShapeCornerSizeFraction);
    property public final float DefaultButtonSize;
    property public final float DefaultIconSize;
    property public final float ExtraLargeButtonSize;
    property public final float ExtraLargeIconSize;
    property public final float LargeButtonSize;
    property public final float LargeIconSize;
    property public final float PressedShapeCornerSizeFraction;
    property public final float SmallButtonSize;
    property public final float SmallIconSize;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape checkedShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.IconToggleButtonDefaults INSTANCE;
  }

  public final class IconToggleButtonKt {
    method @androidx.compose.runtime.Composable public static void IconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class IconToggleButtonShapes {
    ctor public IconToggleButtonShapes(androidx.compose.ui.graphics.Shape unchecked, optional androidx.compose.ui.graphics.Shape? checked, optional androidx.compose.ui.graphics.Shape? uncheckedPressed, optional androidx.compose.ui.graphics.Shape? checkedPressed);
    method public androidx.wear.compose.material3.IconToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape unchecked, optional androidx.compose.ui.graphics.Shape? checked, optional androidx.compose.ui.graphics.Shape? uncheckedPressed, optional androidx.compose.ui.graphics.Shape? checkedPressed);
    method public androidx.compose.ui.graphics.Shape? getChecked();
    method public androidx.compose.ui.graphics.Shape? getCheckedPressed();
    method public androidx.compose.ui.graphics.Shape getUnchecked();
    method public androidx.compose.ui.graphics.Shape? getUncheckedPressed();
    property public final androidx.compose.ui.graphics.Shape? checked;
    property public final androidx.compose.ui.graphics.Shape? checkedPressed;
    property public final androidx.compose.ui.graphics.Shape unchecked;
    property public final androidx.compose.ui.graphics.Shape? uncheckedPressed;
  }

  public final class InteractiveComponentSizeKt {
    method @SuppressCompatibility @androidx.wear.compose.material3.ExperimentalWearMaterial3Api public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> getLocalMinimumInteractiveComponentEnforcement();
    method public static androidx.compose.ui.Modifier minimumInteractiveComponentSize(androidx.compose.ui.Modifier);
    property @SuppressCompatibility @androidx.wear.compose.material3.ExperimentalWearMaterial3Api public static final androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> LocalMinimumInteractiveComponentEnforcement;
  }

  public final class LevelIndicatorColors {
    ctor public LevelIndicatorColors(long indicatorColor, long trackColor, long disabledIndicatorColor, long disabledTrackColor);
    method public androidx.wear.compose.material3.LevelIndicatorColors copy(optional long indicatorColor, optional long trackColor, optional long disabledIndicatorColor, optional long disabledTrackColor);
    method public long getDisabledIndicatorColor();
    method public long getDisabledTrackColor();
    method public long getIndicatorColor();
    method public long getTrackColor();
    property public final long disabledIndicatorColor;
    property public final long disabledTrackColor;
    property public final long indicatorColor;
    property public final long trackColor;
  }

  public final class LevelIndicatorDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors(optional long indicatorColor, optional long trackColor, optional long disabledIndicatorColor, optional long disabledTrackColor);
    method public float getStrokeWidth();
    property public final float StrokeWidth;
    property public static final float SweepAngle;
    field public static final androidx.wear.compose.material3.LevelIndicatorDefaults INSTANCE;
    field public static final float SweepAngle = 72.0f;
  }

  public final class LevelIndicatorKt {
    method @androidx.compose.runtime.Composable public static void LevelIndicator(kotlin.jvm.functions.Function0<java.lang.Float> value, optional androidx.compose.ui.Modifier modifier, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional boolean enabled, optional androidx.wear.compose.material3.LevelIndicatorColors colors, optional float strokeWidth, optional float sweepAngle, optional boolean reverseDirection);
    method @androidx.compose.runtime.Composable public static void LevelIndicator(kotlin.jvm.functions.Function0<java.lang.Integer> value, kotlin.ranges.IntProgression valueProgression, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.LevelIndicatorColors colors, optional float strokeWidth, optional float sweepAngle, optional boolean reverseDirection);
  }

  public final class LinearProgressIndicatorDefaults {
    method public float getStrokeWidthLarge();
    method public float getStrokeWidthSmall();
    property public final float StrokeWidthLarge;
    property public final float StrokeWidthSmall;
    field public static final androidx.wear.compose.material3.LinearProgressIndicatorDefaults INSTANCE;
  }

  public final class LinearProgressIndicatorKt {
    method @androidx.compose.runtime.Composable public static void LinearProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional boolean enabled);
    method @androidx.compose.runtime.Composable public static void LinearProgressIndicatorContent(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional boolean enabled);
  }

  public final class ListHeaderDefaults {
    method @androidx.compose.runtime.Composable public long getContentColor();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public long getSubHeaderContentColor();
    method public androidx.compose.foundation.layout.PaddingValues getSubHeaderContentPadding();
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public final androidx.compose.foundation.layout.PaddingValues SubHeaderContentPadding;
    property @androidx.compose.runtime.Composable public final long contentColor;
    property @androidx.compose.runtime.Composable public final long subHeaderContentColor;
    field public static final androidx.wear.compose.material3.ListHeaderDefaults INSTANCE;
  }

  public final class ListHeaderKt {
    method @androidx.compose.runtime.Composable public static void ListHeader(optional androidx.compose.ui.Modifier modifier, optional long backgroundColor, optional long contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ListSubHeader(optional androidx.compose.ui.Modifier modifier, optional long backgroundColor, optional long contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
  }

  public final class MaterialTheme {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.ColorScheme getColorScheme();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.MotionScheme getMotionScheme();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Shapes getShapes();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Typography getTypography();
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.wear.compose.material3.ColorScheme colorScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.wear.compose.material3.MotionScheme motionScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.wear.compose.material3.Shapes shapes;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.wear.compose.material3.Typography typography;
    field public static final androidx.wear.compose.material3.MaterialTheme INSTANCE;
  }

  public final class MaterialThemeKt {
    method @androidx.compose.runtime.Composable public static void MaterialTheme(optional androidx.wear.compose.material3.ColorScheme colorScheme, optional androidx.wear.compose.material3.Typography typography, optional androidx.wear.compose.material3.Shapes shapes, optional androidx.wear.compose.material3.MotionScheme motionScheme, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @androidx.compose.runtime.Immutable public interface MotionScheme {
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowSpatialSpec();
    field public static final androidx.wear.compose.material3.MotionScheme.Companion Companion;
  }

  public static final class MotionScheme.Companion {
    method public androidx.wear.compose.material3.MotionScheme expressive();
    method public androidx.wear.compose.material3.MotionScheme standard();
  }

  public final class OpenOnPhoneDialogColors {
    ctor public OpenOnPhoneDialogColors(long iconColor, long iconContainerColor, long progressIndicatorColor, long progressTrackColor, long textColor);
    method public androidx.wear.compose.material3.OpenOnPhoneDialogColors copy(optional long iconColor, optional long iconContainerColor, optional long progressIndicatorColor, optional long progressTrackColor, optional long textColor);
    method public long getIconColor();
    method public long getIconContainerColor();
    method public long getProgressIndicatorColor();
    method public long getProgressTrackColor();
    method public long getTextColor();
    property public final long iconColor;
    property public final long iconContainerColor;
    property public final long progressIndicatorColor;
    property public final long progressTrackColor;
    property public final long textColor;
  }

  public final class OpenOnPhoneDialogDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors(optional long iconColor, optional long iconContainerColor, optional long progressIndicatorColor, optional long progressTrackColor, optional long textColor);
    method @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<androidx.wear.compose.foundation.CurvedScope,kotlin.Unit> curvedText(optional String text, optional androidx.wear.compose.foundation.CurvedTextStyle style);
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> getOpenOnPhoneIcon();
    property public static final long DurationMillis;
    property public final kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> OpenOnPhoneIcon;
    field public static final long DurationMillis = 4000L; // 0xfa0L
    field public static final androidx.wear.compose.material3.OpenOnPhoneDialogDefaults INSTANCE;
  }

  public final class OpenOnPhoneDialogKt {
    method @androidx.compose.runtime.Composable public static void OpenOnPhoneDialog(boolean show, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.wear.compose.material3.OpenOnPhoneDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class PageIndicatorDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getBackgroundColor();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getSelectedColor();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getUnselectedColor();
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final long backgroundColor;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final long selectedColor;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final long unselectedColor;
    field public static final androidx.wear.compose.material3.PageIndicatorDefaults INSTANCE;
  }

  public final class PageIndicatorKt {
    method @androidx.compose.runtime.Composable public static void HorizontalPageIndicator(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional long selectedColor, optional long unselectedColor, optional long backgroundColor);
    method @androidx.compose.runtime.Composable public static void VerticalPageIndicator(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional long selectedColor, optional long unselectedColor, optional long backgroundColor);
  }

  public final class PagerScaffoldDefaults {
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getFadeOutAnimation();
    property public final androidx.compose.animation.core.AnimationSpec<java.lang.Float> FadeOutAnimation;
    field public static final androidx.wear.compose.material3.PagerScaffoldDefaults INSTANCE;
  }

  public final class PagerScaffoldKt {
    method @androidx.compose.runtime.Composable public static void HorizontalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? pageIndicator, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? pageIndicatorAnimationSpec, optional androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior? rotaryScrollableBehavior, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.pager.PagerScope,? super java.lang.Integer,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void VerticalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? pageIndicator, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? pageIndicatorAnimationSpec, optional androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior? rotaryScrollableBehavior, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.pager.PagerScope,? super java.lang.Integer,kotlin.Unit> content);
  }

  public final class PickerDefaults {
    method public float getGradientRatio();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior rotarySnapBehavior(androidx.wear.compose.material3.PickerState state);
    property public final float GradientRatio;
    field public static final androidx.wear.compose.material3.PickerDefaults INSTANCE;
  }

  public final class PickerGroupKt {
    method @androidx.compose.runtime.Composable public static void PickerGroup(int selectedPickerIndex, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onPickerSelected, optional androidx.compose.ui.Modifier modifier, optional boolean autoCenter, optional kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit>? separator, optional boolean propagateMinConstraints, kotlin.jvm.functions.Function1<? super androidx.wear.compose.material3.PickerGroupScope,kotlin.Unit> content);
  }

  public final class PickerGroupScope {
    ctor public PickerGroupScope();
    method public boolean pickerGroupItem(androidx.wear.compose.material3.PickerState pickerState, optional androidx.compose.ui.Modifier modifier, optional String? contentDescription, optional androidx.compose.ui.focus.FocusRequester? focusRequester, optional kotlin.jvm.functions.Function0<kotlin.Unit> onSelected, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? readOnlyLabel, optional float verticalSpacing, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.PickerScope,? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit> option);
  }

  public final class PickerKt {
    method @androidx.compose.runtime.Composable public static void Picker(androidx.wear.compose.material3.PickerState state, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional boolean readOnly, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? readOnlyLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit> onSelected, optional float verticalSpacing, optional @FloatRange(from=0.0, to=0.5) float gradientRatio, optional long gradientColor, optional boolean userScrollEnabled, optional androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior? rotaryScrollableBehavior, kotlin.jvm.functions.Function2<? super androidx.wear.compose.material3.PickerScope,? super java.lang.Integer,kotlin.Unit> option);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PickerState rememberPickerState(@IntRange(from=1L) int initialNumberOfOptions, optional @IntRange(from=0L) int initiallySelectedIndex, optional boolean shouldRepeatOptions);
  }

  public interface PickerScope {
    method public int getSelectedOptionIndex();
    property public abstract int selectedOptionIndex;
  }

  @androidx.compose.runtime.Stable public final class PickerState implements androidx.compose.foundation.gestures.ScrollableState {
    ctor public PickerState(@IntRange(from=1L) int initialNumberOfOptions, optional @IntRange(from=0L) int initiallySelectedIndex, optional boolean shouldRepeatOptions);
    method public suspend Object? animateScrollToOption(int index, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float dispatchRawDelta(float delta);
    method public int getNumberOfOptions();
    method public int getSelectedOptionIndex();
    method public boolean getShouldRepeatOptions();
    method public boolean isScrollInProgress();
    method public suspend Object? scroll(androidx.compose.foundation.MutatePriority scrollPriority, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.gestures.ScrollScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,? extends java.lang.Object?> block, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? scrollToOption(int index, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public void setNumberOfOptions(int);
    property public boolean canScrollBackward;
    property public boolean canScrollForward;
    property public boolean isScrollInProgress;
    property public final int numberOfOptions;
    property public final int selectedOptionIndex;
    property public final boolean shouldRepeatOptions;
    field public static final androidx.wear.compose.material3.PickerState.Companion Companion;
  }

  public static final class PickerState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.wear.compose.material3.PickerState,java.lang.Object> getSaver();
    property public final androidx.compose.runtime.saveable.Saver<androidx.wear.compose.material3.PickerState,java.lang.Object> Saver;
  }

  public final class PlaceholderDefaults {
    method public androidx.compose.ui.graphics.Shape getShape();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter painterWithPlaceholderOverlayBackgroundBrush(androidx.wear.compose.material3.PlaceholderState placeholderState, androidx.compose.ui.graphics.painter.Painter originalPainter, optional long color);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter placeholderBackgroundBrush(androidx.wear.compose.material3.PlaceholderState placeholderState, optional long color);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors placeholderButtonColors(androidx.wear.compose.material3.ButtonColors originalButtonColors, androidx.wear.compose.material3.PlaceholderState placeholderState, optional long color);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors placeholderButtonColors(androidx.wear.compose.material3.PlaceholderState placeholderState, optional long color);
    property public final androidx.compose.ui.graphics.Shape Shape;
    field public static final androidx.wear.compose.material3.PlaceholderDefaults INSTANCE;
  }

  public final class PlaceholderKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholder(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState placeholderState, optional androidx.compose.ui.graphics.Shape shape, optional long color);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholderShimmer(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState placeholderState, optional androidx.compose.ui.graphics.Shape shape, optional long color);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PlaceholderState rememberPlaceholderState(kotlin.jvm.functions.Function0<java.lang.Boolean> isContentReady);
  }

  @androidx.compose.runtime.Stable public final class PlaceholderState {
    method public suspend Object? animatePlaceholder(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public boolean isHidden();
    method public boolean isWipingOff();
    property public final boolean isHidden;
    property public final boolean isWipingOff;
  }

  public final class ProgressIndicatorColors {
    ctor public ProgressIndicatorColors(androidx.compose.ui.graphics.Brush indicatorBrush, androidx.compose.ui.graphics.Brush trackBrush, androidx.compose.ui.graphics.Brush overflowTrackBrush, androidx.compose.ui.graphics.Brush disabledIndicatorBrush, androidx.compose.ui.graphics.Brush disabledTrackBrush, androidx.compose.ui.graphics.Brush disabledOverflowTrackBrush);
    method public androidx.wear.compose.material3.ProgressIndicatorColors copy(optional androidx.compose.ui.graphics.Brush? indicatorBrush, optional androidx.compose.ui.graphics.Brush? trackBrush, optional androidx.compose.ui.graphics.Brush? overflowTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledIndicatorBrush, optional androidx.compose.ui.graphics.Brush? disabledTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledOverflowTrackBrush);
    method public androidx.wear.compose.material3.ProgressIndicatorColors copy(optional long indicatorColor, optional long trackColor, optional long overflowTrackColor, optional long disabledIndicatorColor, optional long disabledTrackColor, optional long disabledOverflowTrackColor);
    method public androidx.compose.ui.graphics.Brush getDisabledIndicatorBrush();
    method public androidx.compose.ui.graphics.Brush getDisabledOverflowTrackBrush();
    method public androidx.compose.ui.graphics.Brush getDisabledTrackBrush();
    method public androidx.compose.ui.graphics.Brush getIndicatorBrush();
    method public androidx.compose.ui.graphics.Brush getOverflowTrackBrush();
    method public androidx.compose.ui.graphics.Brush getTrackBrush();
    property public final androidx.compose.ui.graphics.Brush disabledIndicatorBrush;
    property public final androidx.compose.ui.graphics.Brush disabledOverflowTrackBrush;
    property public final androidx.compose.ui.graphics.Brush disabledTrackBrush;
    property public final androidx.compose.ui.graphics.Brush indicatorBrush;
    property public final androidx.compose.ui.graphics.Brush overflowTrackBrush;
    property public final androidx.compose.ui.graphics.Brush trackBrush;
  }

  public final class ProgressIndicatorDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(optional androidx.compose.ui.graphics.Brush? indicatorBrush, optional androidx.compose.ui.graphics.Brush? trackBrush, optional androidx.compose.ui.graphics.Brush? overflowTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledIndicatorBrush, optional androidx.compose.ui.graphics.Brush? disabledTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledOverflowTrackBrush);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(optional long indicatorColor, optional long trackColor, optional long overflowTrackColor, optional long disabledIndicatorColor, optional long disabledTrackColor, optional long disabledOverflowTrackColor);
    field public static final androidx.wear.compose.material3.ProgressIndicatorDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class RadioButtonColors {
    ctor public RadioButtonColors(long selectedContainerColor, long selectedContentColor, long selectedSecondaryContentColor, long selectedIconColor, long selectedControlColor, long unselectedContainerColor, long unselectedContentColor, long unselectedSecondaryContentColor, long unselectedIconColor, long unselectedControlColor, long disabledSelectedContainerColor, long disabledSelectedContentColor, long disabledSelectedSecondaryContentColor, long disabledSelectedIconColor, long disabledSelectedControlColor, long disabledUnselectedContainerColor, long disabledUnselectedContentColor, long disabledUnselectedSecondaryContentColor, long disabledUnselectedIconColor, long disabledUnselectedControlColor);
    method public androidx.wear.compose.material3.RadioButtonColors copy(optional long selectedContainerColor, optional long selectedContentColor, optional long selectedSecondaryContentColor, optional long selectedIconColor, optional long selectedControlColor, optional long unselectedContainerColor, optional long unselectedContentColor, optional long unselectedSecondaryContentColor, optional long unselectedIconColor, optional long unselectedControlColor, optional long disabledSelectedContainerColor, optional long disabledSelectedContentColor, optional long disabledSelectedSecondaryContentColor, optional long disabledSelectedIconColor, optional long disabledSelectedControlColor, optional long disabledUnselectedContainerColor, optional long disabledUnselectedContentColor, optional long disabledUnselectedSecondaryContentColor, optional long disabledUnselectedIconColor, optional long disabledUnselectedControlColor);
    method public long getDisabledSelectedContainerColor();
    method public long getDisabledSelectedContentColor();
    method public long getDisabledSelectedControlColor();
    method public long getDisabledSelectedIconColor();
    method public long getDisabledSelectedSecondaryContentColor();
    method public long getDisabledUnselectedContainerColor();
    method public long getDisabledUnselectedContentColor();
    method public long getDisabledUnselectedControlColor();
    method public long getDisabledUnselectedIconColor();
    method public long getDisabledUnselectedSecondaryContentColor();
    method public long getSelectedContainerColor();
    method public long getSelectedContentColor();
    method public long getSelectedControlColor();
    method public long getSelectedIconColor();
    method public long getSelectedSecondaryContentColor();
    method public long getUnselectedContainerColor();
    method public long getUnselectedContentColor();
    method public long getUnselectedControlColor();
    method public long getUnselectedIconColor();
    method public long getUnselectedSecondaryContentColor();
    property public final long disabledSelectedContainerColor;
    property public final long disabledSelectedContentColor;
    property public final long disabledSelectedControlColor;
    property public final long disabledSelectedIconColor;
    property public final long disabledSelectedSecondaryContentColor;
    property public final long disabledUnselectedContainerColor;
    property public final long disabledUnselectedContentColor;
    property public final long disabledUnselectedControlColor;
    property public final long disabledUnselectedIconColor;
    property public final long disabledUnselectedSecondaryContentColor;
    property public final long selectedContainerColor;
    property public final long selectedContentColor;
    property public final long selectedControlColor;
    property public final long selectedIconColor;
    property public final long selectedSecondaryContentColor;
    property public final long unselectedContainerColor;
    property public final long unselectedContentColor;
    property public final long unselectedControlColor;
    property public final long unselectedIconColor;
    property public final long unselectedSecondaryContentColor;
  }

  public final class RadioButtonDefaults {
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRadioButtonShape();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitRadioButtonShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors(optional long selectedContainerColor, optional long selectedContentColor, optional long selectedSecondaryContentColor, optional long selectedIconColor, optional long selectedControlColor, optional long unselectedContainerColor, optional long unselectedContentColor, optional long unselectedSecondaryContentColor, optional long unselectedIconColor, optional long unselectedControlColor, optional long disabledSelectedContainerColor, optional long disabledSelectedContentColor, optional long disabledSelectedSecondaryContentColor, optional long disabledSelectedIconColor, optional long disabledSelectedControlColor, optional long disabledUnselectedContainerColor, optional long disabledUnselectedContentColor, optional long disabledUnselectedSecondaryContentColor, optional long disabledUnselectedIconColor, optional long disabledUnselectedControlColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors(optional long selectedContainerColor, optional long selectedContentColor, optional long selectedSecondaryContentColor, optional long selectedSplitContainerColor, optional long selectedControlColor, optional long unselectedContainerColor, optional long unselectedContentColor, optional long unselectedSecondaryContentColor, optional long unselectedSplitContainerColor, optional long unselectedControlColor, optional long disabledSelectedContainerColor, optional long disabledSelectedContentColor, optional long disabledSelectedSecondaryContentColor, optional long disabledSelectedSplitContainerColor, optional long disabledSelectedControlColor, optional long disabledUnselectedContainerColor, optional long disabledUnselectedContentColor, optional long disabledUnselectedSecondaryContentColor, optional long disabledUnselectedSplitContainerColor, optional long disabledUnselectedControlColor);
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape radioButtonShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape splitRadioButtonShape;
    field public static final androidx.wear.compose.material3.RadioButtonDefaults INSTANCE;
  }

  public final class RadioButtonKt {
    method @androidx.compose.runtime.Composable public static void RadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onSelect, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.RadioButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void SplitRadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onSelectionClick, String? selectionContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitRadioButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? selectionInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
  }

  public final class RangeSemanticsKt {
    method public static androidx.compose.ui.Modifier rangeSemantics(androidx.compose.ui.Modifier, float value, boolean enabled, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, int steps);
  }

  public final class RippleKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(androidx.compose.ui.graphics.ColorProducer color, optional boolean bounded, optional float radius);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(optional boolean bounded, optional float radius, optional long color);
  }

  public final class ScreenScaffoldDefaults {
    method @Deprecated public androidx.compose.foundation.layout.PaddingValues contentPaddingWithEdgeButton(float edgeButtonSize, optional float start, optional float top, optional float end, optional float extraBottom);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getEdgeButtonMinSpacing();
    method public float getEdgeButtonSpacing();
    property public final float EdgeButtonMinSpacing;
    property public final float EdgeButtonSpacing;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.layout.PaddingValues contentPadding;
    field public static final androidx.wear.compose.material3.ScreenScaffoldDefaults INSTANCE;
  }

  public final class ScreenScaffoldKt {
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.lazy.LazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.lazy.LazyListState scrollState, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional float edgeButtonSpacing, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.ScrollInfoProvider? scrollInfoProvider, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.ScalingLazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.ScalingLazyListState scrollState, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional float edgeButtonSpacing, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState scrollState, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional float edgeButtonSpacing, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.ScrollInfoProvider scrollInfoProvider, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional float edgeButtonSpacing, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ScreenStage {
    field public static final androidx.wear.compose.material3.ScreenStage.Companion Companion;
  }

  public static final class ScreenStage.Companion {
    method public int getIdle();
    method public int getNew();
    method public int getScrolling();
    property public final int Idle;
    property public final int New;
    property public final int Scrolling;
  }

  public final class ScrollAwayKt {
    method public static androidx.compose.ui.Modifier scrollAway(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.ScrollInfoProvider scrollInfoProvider, kotlin.jvm.functions.Function0<androidx.wear.compose.material3.ScreenStage> screenStage);
  }

  public final class ScrollIndicatorDefaults {
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getPositionAnimationSpec();
    property public final androidx.compose.animation.core.AnimationSpec<java.lang.Float> PositionAnimationSpec;
    field public static final androidx.wear.compose.material3.ScrollIndicatorDefaults INSTANCE;
  }

  public final class ScrollIndicatorKt {
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.ScalingLazyListState state, optional androidx.compose.ui.Modifier modifier, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState state, optional androidx.compose.ui.Modifier modifier, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
  }

  public final class SegmentedCircularProgressIndicatorKt {
    method @androidx.compose.runtime.Composable public static void SegmentedCircularProgressIndicator(@IntRange(from=1L) int segmentCount, kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize, optional boolean enabled);
    method @androidx.compose.runtime.Composable public static void SegmentedCircularProgressIndicator(@IntRange(from=1L) int segmentCount, kotlin.jvm.functions.Function1<? super java.lang.Integer,java.lang.Boolean> segmentValue, optional androidx.compose.ui.Modifier modifier, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional float strokeWidth, optional float gapSize, optional boolean enabled);
  }

  public final class ShapeDefaults {
    method public androidx.compose.foundation.shape.RoundedCornerShape getExtraLarge();
    method public androidx.compose.foundation.shape.RoundedCornerShape getExtraSmall();
    method public androidx.compose.foundation.shape.RoundedCornerShape getLarge();
    method public androidx.compose.foundation.shape.RoundedCornerShape getMedium();
    method public androidx.compose.foundation.shape.RoundedCornerShape getSmall();
    property public final androidx.compose.foundation.shape.RoundedCornerShape ExtraLarge;
    property public final androidx.compose.foundation.shape.RoundedCornerShape ExtraSmall;
    property public final androidx.compose.foundation.shape.RoundedCornerShape Large;
    property public final androidx.compose.foundation.shape.RoundedCornerShape Medium;
    property public final androidx.compose.foundation.shape.RoundedCornerShape Small;
    field public static final androidx.wear.compose.material3.ShapeDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Shapes {
    ctor public Shapes();
    ctor public Shapes(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.wear.compose.material3.Shapes copy(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property public final androidx.compose.foundation.shape.CornerBasedShape extraLarge;
    property public final androidx.compose.foundation.shape.CornerBasedShape extraSmall;
    property public final androidx.compose.foundation.shape.CornerBasedShape large;
    property public final androidx.compose.foundation.shape.CornerBasedShape medium;
    property public final androidx.compose.foundation.shape.CornerBasedShape small;
  }

  @androidx.compose.runtime.Immutable public final class SliderColors {
    ctor public SliderColors(long containerColor, long buttonIconColor, long selectedBarColor, long unselectedBarColor, long selectedBarSeparatorColor, long unselectedBarSeparatorColor, long disabledContainerColor, long disabledButtonIconColor, long disabledSelectedBarColor, long disabledUnselectedBarColor, long disabledSelectedBarSeparatorColor, long disabledUnselectedBarSeparatorColor);
    method public androidx.wear.compose.material3.SliderColors copy(optional long containerColor, optional long buttonIconColor, optional long selectedBarColor, optional long unselectedBarColor, optional long selectedBarSeparatorColor, optional long unselectedBarSeparatorColor, optional long disabledContainerColor, optional long disabledButtonIconColor, optional long disabledSelectedBarColor, optional long disabledUnselectedBarColor, optional long disabledSelectedBarSeparatorColor, optional long disabledUnselectedBarSeparatorColor);
    method public long getButtonIconColor();
    method public long getContainerColor();
    method public long getDisabledButtonIconColor();
    method public long getDisabledContainerColor();
    method public long getDisabledSelectedBarColor();
    method public long getDisabledSelectedBarSeparatorColor();
    method public long getDisabledUnselectedBarColor();
    method public long getDisabledUnselectedBarSeparatorColor();
    method public long getSelectedBarColor();
    method public long getSelectedBarSeparatorColor();
    method public long getUnselectedBarColor();
    method public long getUnselectedBarSeparatorColor();
    property public final long buttonIconColor;
    property public final long containerColor;
    property public final long disabledButtonIconColor;
    property public final long disabledContainerColor;
    property public final long disabledSelectedBarColor;
    property public final long disabledSelectedBarSeparatorColor;
    property public final long disabledUnselectedBarColor;
    property public final long disabledUnselectedBarSeparatorColor;
    property public final long selectedBarColor;
    property public final long selectedBarSeparatorColor;
    property public final long unselectedBarColor;
    property public final long unselectedBarSeparatorColor;
  }

  public final class SliderDefaults {
    method @androidx.compose.runtime.Composable public void DecreaseIcon(optional androidx.compose.ui.Modifier modifier, optional String contentDescription);
    method @androidx.compose.runtime.Composable public void IncreaseIcon(optional androidx.compose.ui.Modifier modifier, optional String contentDescription);
    method @androidx.compose.runtime.Composable public String getDecreaseIconContentDescription();
    method public float getIconSize();
    method @androidx.compose.runtime.Composable public String getIncreaseIconContentDescription();
    method public int getMaxSegmentSteps();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors(optional long containerColor, optional long buttonIconColor, optional long selectedBarColor, optional long unselectedBarColor, optional long selectedBarSeparatorColor, optional long unselectedBarSeparatorColor, optional long disabledContainerColor, optional long disabledButtonIconColor, optional long disabledSelectedBarColor, optional long disabledUnselectedBarColor, optional long disabledSelectedBarSeparatorColor, optional long disabledUnselectedBarSeparatorColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors(optional long containerColor, optional long buttonIconColor, optional long selectedBarColor, optional long unselectedBarColor, optional long selectedBarSeparatorColor, optional long unselectedBarSeparatorColor, optional long disabledContainerColor, optional long disabledButtonIconColor, optional long disabledSelectedBarColor, optional long disabledUnselectedBarColor, optional long disabledSelectedBarSeparatorColor, optional long disabledUnselectedBarSeparatorColor);
    property public final float IconSize;
    property public final int MaxSegmentSteps;
    property @androidx.compose.runtime.Composable public final String decreaseIconContentDescription;
    property @androidx.compose.runtime.Composable public final String increaseIconContentDescription;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.wear.compose.material3.SliderDefaults INSTANCE;
  }

  public final class SliderKt {
    method @androidx.compose.runtime.Composable public static void Slider(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, int steps, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional boolean segmented, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SliderColors colors);
    method @androidx.compose.runtime.Composable public static void Slider(int value, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onValueChange, kotlin.ranges.IntProgression valueProgression, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional boolean enabled, optional boolean segmented, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SliderColors colors);
  }

  public final class SplitCheckboxButtonColors {
    ctor public SplitCheckboxButtonColors(long checkedContainerColor, long checkedContentColor, long checkedSecondaryContentColor, long checkedSplitContainerColor, long checkedBoxColor, long checkedCheckmarkColor, long uncheckedContainerColor, long uncheckedContentColor, long uncheckedSecondaryContentColor, long uncheckedSplitContainerColor, long uncheckedBoxColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledCheckedSecondaryContentColor, long disabledCheckedSplitContainerColor, long disabledCheckedBoxColor, long disabledCheckedCheckmarkColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor, long disabledUncheckedSecondaryContentColor, long disabledUncheckedSplitContainerColor, long disabledUncheckedBoxColor);
    method public androidx.wear.compose.material3.SplitCheckboxButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedSplitContainerColor, optional long checkedBoxColor, optional long checkedCheckmarkColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedSplitContainerColor, optional long uncheckedBoxColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedSplitContainerColor, optional long disabledCheckedBoxColor, optional long disabledCheckedCheckmarkColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedSplitContainerColor, optional long disabledUncheckedBoxColor);
    method public long getCheckedBoxColor();
    method public long getCheckedCheckmarkColor();
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getCheckedSecondaryContentColor();
    method public long getCheckedSplitContainerColor();
    method public long getDisabledCheckedBoxColor();
    method public long getDisabledCheckedCheckmarkColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledCheckedSecondaryContentColor();
    method public long getDisabledCheckedSplitContainerColor();
    method public long getDisabledUncheckedBoxColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getDisabledUncheckedSecondaryContentColor();
    method public long getDisabledUncheckedSplitContainerColor();
    method public long getUncheckedBoxColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    method public long getUncheckedSecondaryContentColor();
    method public long getUncheckedSplitContainerColor();
    property public final long checkedBoxColor;
    property public final long checkedCheckmarkColor;
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long checkedSecondaryContentColor;
    property public final long checkedSplitContainerColor;
    property public final long disabledCheckedBoxColor;
    property public final long disabledCheckedCheckmarkColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledCheckedSecondaryContentColor;
    property public final long disabledCheckedSplitContainerColor;
    property public final long disabledUncheckedBoxColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long disabledUncheckedSecondaryContentColor;
    property public final long disabledUncheckedSplitContainerColor;
    property public final long uncheckedBoxColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
    property public final long uncheckedSecondaryContentColor;
    property public final long uncheckedSplitContainerColor;
  }

  public final class SplitRadioButtonColors {
    ctor public SplitRadioButtonColors(long selectedContainerColor, long selectedContentColor, long selectedSecondaryContentColor, long selectedSplitContainerColor, long selectedControlColor, long unselectedContainerColor, long unselectedContentColor, long unselectedSecondaryContentColor, long unselectedSplitContainerColor, long unselectedControlColor, long disabledSelectedContainerColor, long disabledSelectedContentColor, long disabledSelectedSecondaryContentColor, long disabledSelectedSplitContainerColor, long disabledSelectedControlColor, long disabledUnselectedContainerColor, long disabledUnselectedContentColor, long disabledUnselectedSecondaryContentColor, long disabledUnselectedSplitContainerColor, long disabledUnselectedControlColor);
    method public androidx.wear.compose.material3.SplitRadioButtonColors copy(optional long selectedContainerColor, optional long selectedContentColor, optional long selectedSecondaryContentColor, optional long selectedSplitContainerColor, optional long selectedControlColor, optional long unselectedContainerColor, optional long unselectedContentColor, optional long unselectedSecondaryContentColor, optional long unselectedSplitContainerColor, optional long unselectedControlColor, optional long disabledSelectedContainerColor, optional long disabledSelectedContentColor, optional long disabledSelectedSecondaryContentColor, optional long disabledSelectedSplitContainerColor, optional long disabledSelectedControlColor, optional long disabledUnselectedContainerColor, optional long disabledUnselectedContentColor, optional long disabledUnselectedSecondaryContentColor, optional long disabledUnselectedSplitContainerColor, optional long disabledUnselectedControlColor);
    method public long getDisabledSelectedContainerColor();
    method public long getDisabledSelectedContentColor();
    method public long getDisabledSelectedControlColor();
    method public long getDisabledSelectedSecondaryContentColor();
    method public long getDisabledSelectedSplitContainerColor();
    method public long getDisabledUnselectedContainerColor();
    method public long getDisabledUnselectedContentColor();
    method public long getDisabledUnselectedControlColor();
    method public long getDisabledUnselectedSecondaryContentColor();
    method public long getDisabledUnselectedSplitContainerColor();
    method public long getSelectedContainerColor();
    method public long getSelectedContentColor();
    method public long getSelectedControlColor();
    method public long getSelectedSecondaryContentColor();
    method public long getSelectedSplitContainerColor();
    method public long getUnselectedContainerColor();
    method public long getUnselectedContentColor();
    method public long getUnselectedControlColor();
    method public long getUnselectedSecondaryContentColor();
    method public long getUnselectedSplitContainerColor();
    property public final long disabledSelectedContainerColor;
    property public final long disabledSelectedContentColor;
    property public final long disabledSelectedControlColor;
    property public final long disabledSelectedSecondaryContentColor;
    property public final long disabledSelectedSplitContainerColor;
    property public final long disabledUnselectedContainerColor;
    property public final long disabledUnselectedContentColor;
    property public final long disabledUnselectedControlColor;
    property public final long disabledUnselectedSecondaryContentColor;
    property public final long disabledUnselectedSplitContainerColor;
    property public final long selectedContainerColor;
    property public final long selectedContentColor;
    property public final long selectedControlColor;
    property public final long selectedSecondaryContentColor;
    property public final long selectedSplitContainerColor;
    property public final long unselectedContainerColor;
    property public final long unselectedContentColor;
    property public final long unselectedControlColor;
    property public final long unselectedSecondaryContentColor;
    property public final long unselectedSplitContainerColor;
  }

  public final class SplitSwitchButtonColors {
    ctor public SplitSwitchButtonColors(long checkedContainerColor, long checkedContentColor, long checkedSecondaryContentColor, long checkedSplitContainerColor, long checkedThumbColor, long checkedThumbIconColor, long checkedTrackColor, long checkedTrackBorderColor, long uncheckedContainerColor, long uncheckedContentColor, long uncheckedSecondaryContentColor, long uncheckedSplitContainerColor, long uncheckedThumbColor, long uncheckedTrackColor, long uncheckedTrackBorderColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledCheckedSecondaryContentColor, long disabledCheckedSplitContainerColor, long disabledCheckedThumbColor, long disabledCheckedThumbIconColor, long disabledCheckedTrackColor, long disabledCheckedTrackBorderColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor, long disabledUncheckedSecondaryContentColor, long disabledUncheckedSplitContainerColor, long disabledUncheckedThumbColor, long disabledUncheckedTrackBorderColor);
    method public androidx.wear.compose.material3.SplitSwitchButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedSplitContainerColor, optional long checkedThumbColor, optional long checkedThumbIconColor, optional long checkedTrackColor, optional long checkedTrackBorderColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedSplitContainerColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedTrackBorderColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedSplitContainerColor, optional long disabledCheckedThumbColor, optional long disabledCheckedThumbIconColor, optional long disabledCheckedTrackColor, optional long disabledCheckedTrackBorderColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedSplitContainerColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackBorderColor);
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getCheckedSecondaryContentColor();
    method public long getCheckedSplitContainerColor();
    method public long getCheckedThumbColor();
    method public long getCheckedThumbIconColor();
    method public long getCheckedTrackBorderColor();
    method public long getCheckedTrackColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledCheckedSecondaryContentColor();
    method public long getDisabledCheckedSplitContainerColor();
    method public long getDisabledCheckedThumbColor();
    method public long getDisabledCheckedThumbIconColor();
    method public long getDisabledCheckedTrackBorderColor();
    method public long getDisabledCheckedTrackColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getDisabledUncheckedSecondaryContentColor();
    method public long getDisabledUncheckedSplitContainerColor();
    method public long getDisabledUncheckedThumbColor();
    method public long getDisabledUncheckedTrackBorderColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    method public long getUncheckedSecondaryContentColor();
    method public long getUncheckedSplitContainerColor();
    method public long getUncheckedThumbColor();
    method public long getUncheckedTrackBorderColor();
    method public long getUncheckedTrackColor();
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long checkedSecondaryContentColor;
    property public final long checkedSplitContainerColor;
    property public final long checkedThumbColor;
    property public final long checkedThumbIconColor;
    property public final long checkedTrackBorderColor;
    property public final long checkedTrackColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledCheckedSecondaryContentColor;
    property public final long disabledCheckedSplitContainerColor;
    property public final long disabledCheckedThumbColor;
    property public final long disabledCheckedThumbIconColor;
    property public final long disabledCheckedTrackBorderColor;
    property public final long disabledCheckedTrackColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long disabledUncheckedSecondaryContentColor;
    property public final long disabledUncheckedSplitContainerColor;
    property public final long disabledUncheckedThumbColor;
    property public final long disabledUncheckedTrackBorderColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
    property public final long uncheckedSecondaryContentColor;
    property public final long uncheckedSplitContainerColor;
    property public final long uncheckedThumbColor;
    property public final long uncheckedTrackBorderColor;
    property public final long uncheckedTrackColor;
  }

  public final class StepperColors {
    ctor public StepperColors(long contentColor, long buttonContainerColor, long buttonIconColor, long disabledContentColor, long disabledButtonContainerColor, long disabledButtonIconColor);
    method public androidx.wear.compose.material3.StepperColors copy(optional long contentColor, optional long buttonContainerColor, optional long buttonIconColor, optional long disabledContentColor, optional long disabledButtonContainerColor, optional long disabledButtonIconColor);
    method public long getButtonContainerColor();
    method public long getButtonIconColor();
    method public long getContentColor();
    method public long getDisabledButtonContainerColor();
    method public long getDisabledButtonIconColor();
    method public long getDisabledContentColor();
    property public final long buttonContainerColor;
    property public final long buttonIconColor;
    property public final long contentColor;
    property public final long disabledButtonContainerColor;
    property public final long disabledButtonIconColor;
    property public final long disabledContentColor;
  }

  public final class StepperDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors(optional long contentColor, optional long buttonContainerColor, optional long buttonIconColor, optional long disabledContentColor, optional long disabledButtonContainerColor, optional long disabledButtonIconColor);
    method public float getIconSize();
    property public final float IconSize;
    field public static final androidx.wear.compose.material3.StepperDefaults INSTANCE;
  }

  public final class StepperKt {
    method @androidx.compose.runtime.Composable public static void Stepper(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, int steps, kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional androidx.wear.compose.material3.StepperColors colors, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Stepper(int value, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onValueChange, kotlin.ranges.IntProgression valueProgression, kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.StepperColors colors, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class SwipeToDismissBoxKt {
    method @androidx.compose.runtime.Composable public static void SwipeToDismissBox(androidx.wear.compose.foundation.SwipeToDismissBoxState state, optional androidx.compose.ui.Modifier modifier, optional long backgroundScrimColor, optional long contentScrimColor, optional Object backgroundKey, optional Object contentKey, optional boolean userSwipeEnabled, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super java.lang.Boolean,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void SwipeToDismissBox(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissed, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.SwipeToDismissBoxState state, optional long backgroundScrimColor, optional long contentScrimColor, optional Object backgroundKey, optional Object contentKey, optional boolean userSwipeEnabled, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super java.lang.Boolean,kotlin.Unit> content);
  }

  public final class SwipeToRevealDefaults {
    method public float getDoubleActionAnchorWidth();
    method public float getLargeActionButtonHeight();
    method public float getSingleActionAnchorWidth();
    method public float getSmallActionButtonHeight();
    property public final float DoubleActionAnchorWidth;
    property public final float LargeActionButtonHeight;
    property public final float SingleActionAnchorWidth;
    property public final float SmallActionButtonHeight;
    field public static final androidx.wear.compose.material3.SwipeToRevealDefaults INSTANCE;
  }

  public final class SwipeToRevealKt {
    method @androidx.compose.runtime.Composable public static void SwipeToReveal(kotlin.jvm.functions.Function1<? super androidx.wear.compose.material3.SwipeToRevealScope,kotlin.Unit> actions, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.RevealState revealState, optional float actionButtonHeight, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.foundation.RevealState rememberRevealState(optional int initialValue, optional float anchorWidth, optional boolean useAnchoredActions, optional int swipeDirection);
  }

  public final class SwipeToRevealScope {
    ctor public SwipeToRevealScope();
    method public void primaryAction(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> text, String label, optional long containerColor, optional long contentColor);
    method public void secondaryAction(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, String label, optional long containerColor, optional long contentColor);
    method public void undoPrimaryAction(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> text, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional long containerColor, optional long contentColor);
    method public void undoSecondaryAction(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> text, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional long containerColor, optional long contentColor);
  }

  @androidx.compose.runtime.Immutable public final class SwitchButtonColors {
    ctor public SwitchButtonColors(long checkedContainerColor, long checkedContentColor, long checkedSecondaryContentColor, long checkedIconColor, long checkedThumbColor, long checkedThumbIconColor, long checkedTrackBorderColor, long checkedTrackColor, long uncheckedContainerColor, long uncheckedContentColor, long uncheckedSecondaryContentColor, long uncheckedIconColor, long uncheckedThumbColor, long uncheckedTrackColor, long uncheckedTrackBorderColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledCheckedSecondaryContentColor, long disabledCheckedIconColor, long disabledCheckedThumbColor, long disabledCheckedThumbIconColor, long disabledCheckedTrackColor, long disabledCheckedTrackBorderColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor, long disabledUncheckedSecondaryContentColor, long disabledUncheckedIconColor, long disabledUncheckedThumbColor, long disabledUncheckedTrackBorderColor);
    method public androidx.wear.compose.material3.SwitchButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedIconColor, optional long checkedThumbColor, optional long checkedThumbIconColor, optional long checkedTrackColor, optional long checkedTrackBorderColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedIconColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedTrackBorderColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedIconColor, optional long disabledCheckedThumbColor, optional long disabledCheckedThumbIconColor, optional long disabledCheckedTrackColor, optional long disabledCheckedTrackBorderColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedIconColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackBorderColor);
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getCheckedIconColor();
    method public long getCheckedSecondaryContentColor();
    method public long getCheckedThumbColor();
    method public long getCheckedThumbIconColor();
    method public long getCheckedTrackBorderColor();
    method public long getCheckedTrackColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledCheckedIconColor();
    method public long getDisabledCheckedSecondaryContentColor();
    method public long getDisabledCheckedThumbColor();
    method public long getDisabledCheckedThumbIconColor();
    method public long getDisabledCheckedTrackBorderColor();
    method public long getDisabledCheckedTrackColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getDisabledUncheckedIconColor();
    method public long getDisabledUncheckedSecondaryContentColor();
    method public long getDisabledUncheckedThumbColor();
    method public long getDisabledUncheckedTrackBorderColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    method public long getUncheckedIconColor();
    method public long getUncheckedSecondaryContentColor();
    method public long getUncheckedThumbColor();
    method public long getUncheckedTrackBorderColor();
    method public long getUncheckedTrackColor();
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long checkedIconColor;
    property public final long checkedSecondaryContentColor;
    property public final long checkedThumbColor;
    property public final long checkedThumbIconColor;
    property public final long checkedTrackBorderColor;
    property public final long checkedTrackColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledCheckedIconColor;
    property public final long disabledCheckedSecondaryContentColor;
    property public final long disabledCheckedThumbColor;
    property public final long disabledCheckedThumbIconColor;
    property public final long disabledCheckedTrackBorderColor;
    property public final long disabledCheckedTrackColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long disabledUncheckedIconColor;
    property public final long disabledUncheckedSecondaryContentColor;
    property public final long disabledUncheckedThumbColor;
    property public final long disabledUncheckedTrackBorderColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
    property public final long uncheckedIconColor;
    property public final long uncheckedSecondaryContentColor;
    property public final long uncheckedThumbColor;
    property public final long uncheckedTrackBorderColor;
    property public final long uncheckedTrackColor;
  }

  public final class SwitchButtonDefaults {
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitSwitchButtonShape();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSwitchButtonShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedSplitContainerColor, optional long checkedThumbColor, optional long checkedThumbIconColor, optional long checkedTrackColor, optional long checkedTrackBorderColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedSplitContainerColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedTrackBorderColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedSplitContainerColor, optional long disabledCheckedThumbColor, optional long disabledCheckedThumbIconColor, optional long disabledCheckedTrackColor, optional long disabledCheckedTrackBorderColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedSplitContainerColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackBorderColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long checkedSecondaryContentColor, optional long checkedIconColor, optional long checkedThumbColor, optional long checkedThumbIconColor, optional long checkedTrackColor, optional long checkedTrackBorderColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long uncheckedSecondaryContentColor, optional long uncheckedIconColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedTrackBorderColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledCheckedSecondaryContentColor, optional long disabledCheckedIconColor, optional long disabledCheckedThumbColor, optional long disabledCheckedThumbIconColor, optional long disabledCheckedTrackColor, optional long disabledCheckedTrackBorderColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor, optional long disabledUncheckedSecondaryContentColor, optional long disabledUncheckedIconColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackBorderColor);
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape splitSwitchButtonShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.ui.graphics.Shape switchButtonShape;
    field public static final androidx.wear.compose.material3.SwitchButtonDefaults INSTANCE;
  }

  public final class SwitchButtonKt {
    method @androidx.compose.runtime.Composable public static void SplitSwitchButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, String? toggleContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitSwitchButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? toggleInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @androidx.compose.runtime.Composable public static void SwitchButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SwitchButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
  }

  @androidx.compose.runtime.Immutable public final class TextButtonColors {
    ctor public TextButtonColors(long containerColor, long contentColor, long disabledContainerColor, long disabledContentColor);
    method public androidx.wear.compose.material3.TextButtonColors copy(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method public long getContainerColor();
    method public long getContentColor();
    method public long getDisabledContainerColor();
    method public long getDisabledContentColor();
    property public final long containerColor;
    property public final long contentColor;
    property public final long disabledContainerColor;
    property public final long disabledContentColor;
  }

  public final class TextButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape shape, optional androidx.compose.foundation.shape.CornerBasedShape pressedShape);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method public float getDefaultButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getDefaultButtonTextStyle();
    method public float getLargeButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeButtonTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method public float getSmallButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getSmallButtonTextStyle();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors(optional long contentColor, optional long disabledContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes shapes(optional androidx.compose.ui.graphics.Shape shape);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors(optional long containerColor, optional long contentColor, optional long disabledContainerColor, optional long disabledContentColor);
    property public final float DefaultButtonSize;
    property public final float LargeButtonSize;
    property public final float SmallButtonSize;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle defaultButtonTextStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle largeButtonTextStyle;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape shape;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle smallButtonTextStyle;
    field public static final androidx.wear.compose.material3.TextButtonDefaults INSTANCE;
  }

  public final class TextButtonKt {
    method @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.TextButtonShapes shapes, optional androidx.wear.compose.material3.TextButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class TextButtonShapes {
    ctor public TextButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape? pressed);
    method public androidx.wear.compose.material3.TextButtonShapes copy(optional androidx.compose.ui.graphics.Shape default, optional androidx.compose.ui.graphics.Shape? pressed);
    method public androidx.compose.ui.graphics.Shape? getPressed();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public final androidx.compose.ui.graphics.Shape? pressed;
    property public final androidx.compose.ui.graphics.Shape shape;
  }

  public final class TextConfiguration {
    ctor public TextConfiguration(androidx.compose.ui.text.style.TextAlign? textAlign, int overflow, int maxLines);
    method public int getMaxLines();
    method public int getOverflow();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign();
    property public final int maxLines;
    property public final int overflow;
    property public final androidx.compose.ui.text.style.TextAlign? textAlign;
  }

  public final class TextConfigurationDefaults {
    method public int getOverflow();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign();
    property public static final int MaxLines;
    property public final int Overflow;
    property public final androidx.compose.ui.text.style.TextAlign? TextAlign;
    field public static final androidx.wear.compose.material3.TextConfigurationDefaults INSTANCE;
    field public static final int MaxLines = 2147483647; // 0x7fffffff
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle value, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.wear.compose.material3.TextConfiguration> getLocalTextConfiguration();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> getLocalTextStyle();
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.wear.compose.material3.TextConfiguration> LocalTextConfiguration;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> LocalTextStyle;
  }

  @androidx.compose.runtime.Immutable public final class TextToggleButtonColors {
    ctor public TextToggleButtonColors(long checkedContainerColor, long checkedContentColor, long uncheckedContainerColor, long uncheckedContentColor, long disabledCheckedContainerColor, long disabledCheckedContentColor, long disabledUncheckedContainerColor, long disabledUncheckedContentColor);
    method public androidx.wear.compose.material3.TextToggleButtonColors copy(optional long checkedContainerColor, optional long checkedContentColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor);
    method public long getCheckedContainerColor();
    method public long getCheckedContentColor();
    method public long getDisabledCheckedContainerColor();
    method public long getDisabledCheckedContentColor();
    method public long getDisabledUncheckedContainerColor();
    method public long getDisabledUncheckedContentColor();
    method public long getUncheckedContainerColor();
    method public long getUncheckedContentColor();
    property public final long checkedContainerColor;
    property public final long checkedContentColor;
    property public final long disabledCheckedContainerColor;
    property public final long disabledCheckedContentColor;
    property public final long disabledUncheckedContainerColor;
    property public final long disabledUncheckedContentColor;
    property public final long uncheckedContainerColor;
    property public final long uncheckedContentColor;
  }

  public final class TextToggleButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape shape, optional androidx.compose.foundation.shape.CornerBasedShape pressedShape);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape();
    method public float getDefaultButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getDefaultButtonTextStyle();
    method public float getExtraLargeButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getExtraLargeButtonTextStyle();
    method public float getLargeButtonSize();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeButtonTextStyle();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method public float getPressedShapeCornerSizeFraction();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes shapes(optional androidx.compose.ui.graphics.Shape shape);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors textToggleButtonColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors textToggleButtonColors(optional long checkedContainerColor, optional long checkedContentColor, optional long uncheckedContainerColor, optional long uncheckedContentColor, optional long disabledCheckedContainerColor, optional long disabledCheckedContentColor, optional long disabledUncheckedContainerColor, optional long disabledUncheckedContentColor);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes variantAnimatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape uncheckedShape, optional androidx.compose.foundation.shape.CornerBasedShape checkedShape, optional float pressedShapeCornerSizeFraction);
    property public final float DefaultButtonSize;
    property public final float ExtraLargeButtonSize;
    property public final float LargeButtonSize;
    property public final float PressedShapeCornerSizeFraction;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape checkedShape;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle defaultButtonTextStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle extraLargeButtonTextStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public final androidx.compose.ui.text.TextStyle largeButtonTextStyle;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public final androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.TextToggleButtonDefaults INSTANCE;
  }

  public final class TextToggleButtonKt {
    method @androidx.compose.runtime.Composable public static void TextToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.TextToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.TextToggleButtonShapes shapes, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

  public final class TextToggleButtonShapes {
    ctor public TextToggleButtonShapes(androidx.compose.ui.graphics.Shape unchecked, optional androidx.compose.ui.graphics.Shape? checked, optional androidx.compose.ui.graphics.Shape? uncheckedPressed, optional androidx.compose.ui.graphics.Shape? checkedPressed);
    method public androidx.wear.compose.material3.TextToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape unchecked, optional androidx.compose.ui.graphics.Shape? checked, optional androidx.compose.ui.graphics.Shape? uncheckedPressed, optional androidx.compose.ui.graphics.Shape? checkedPressed);
    method public androidx.compose.ui.graphics.Shape? getChecked();
    method public androidx.compose.ui.graphics.Shape? getCheckedPressed();
    method public androidx.compose.ui.graphics.Shape getUnchecked();
    method public androidx.compose.ui.graphics.Shape? getUncheckedPressed();
    property public final androidx.compose.ui.graphics.Shape? checked;
    property public final androidx.compose.ui.graphics.Shape? checkedPressed;
    property public final androidx.compose.ui.graphics.Shape unchecked;
    property public final androidx.compose.ui.graphics.Shape? uncheckedPressed;
  }

  @androidx.compose.runtime.Immutable public final class TimePickerColors {
    ctor public TimePickerColors(long selectedPickerContentColor, long unselectedPickerContentColor, long separatorColor, long pickerLabelColor, long confirmButtonContentColor, long confirmButtonContainerColor);
    method public androidx.wear.compose.material3.TimePickerColors copy(optional long selectedPickerContentColor, optional long unselectedPickerContentColor, optional long separatorColor, optional long pickerLabelColor, optional long confirmButtonContentColor, optional long confirmButtonContainerColor);
    method public long getConfirmButtonContainerColor();
    method public long getConfirmButtonContentColor();
    method public long getPickerLabelColor();
    method public long getSelectedPickerContentColor();
    method public long getSeparatorColor();
    method public long getUnselectedPickerContentColor();
    property public final long confirmButtonContainerColor;
    property public final long confirmButtonContentColor;
    property public final long pickerLabelColor;
    property public final long selectedPickerContentColor;
    property public final long separatorColor;
    property public final long unselectedPickerContentColor;
  }

  public final class TimePickerDefaults {
    method @androidx.compose.runtime.Composable public int getTimePickerType();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors(optional long selectedPickerContentColor, optional long unselectedPickerContentColor, optional long separatorColor, optional long pickerLabelColor, optional long confirmButtonContentColor, optional long confirmButtonContainerColor);
    property @androidx.compose.runtime.Composable public final int timePickerType;
    field public static final androidx.wear.compose.material3.TimePickerDefaults INSTANCE;
  }

  public final class TimePickerKt {
    method @RequiresApi(android.os.Build.VERSION_CODES.O) @androidx.compose.runtime.Composable public static void TimePicker(java.time.LocalTime initialTime, kotlin.jvm.functions.Function1<? super java.time.LocalTime,kotlin.Unit> onTimePicked, optional androidx.compose.ui.Modifier modifier, optional int timePickerType, optional androidx.wear.compose.material3.TimePickerColors colors);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TimePickerType {
    field public static final androidx.wear.compose.material3.TimePickerType.Companion Companion;
  }

  public static final class TimePickerType.Companion {
    method public int getHoursMinutes24H();
    method public int getHoursMinutesAmPm12H();
    method public int getHoursMinutesSeconds24H();
    property public final int HoursMinutes24H;
    property public final int HoursMinutesAmPm12H;
    property public final int HoursMinutesSeconds24H;
  }

  public interface TimeSource {
    method @androidx.compose.runtime.Composable public String currentTime();
  }

  public final class TimeTextDefaults {
    method public float getAutoTextWeight();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimeSource rememberTimeSource(String timeFormat);
    method @androidx.compose.runtime.Composable public String timeFormat();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle timeTextStyle(optional long background, optional long color, optional long fontSize);
    property public final float AutoTextWeight;
    property public final androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public static final float MaxSweepAngle;
    property public static final String TimeFormat12Hours;
    property public static final String TimeFormat24Hours;
    field public static final androidx.wear.compose.material3.TimeTextDefaults INSTANCE;
    field public static final float MaxSweepAngle = 70.0f;
    field public static final String TimeFormat12Hours = "h:mm";
    field public static final String TimeFormat24Hours = "HH:mm";
  }

  public final class TimeTextKt {
    method @androidx.compose.runtime.Composable public static void TimeText(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.CurvedModifier curvedModifier, optional float maxSweepAngle, optional androidx.wear.compose.material3.TimeSource timeSource, optional androidx.compose.ui.text.TextStyle timeTextStyle, optional long contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.material3.TimeTextScope,kotlin.Unit> content);
  }

  public abstract sealed class TimeTextScope {
    method public abstract void composable(kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method public abstract void separator(optional androidx.compose.ui.text.TextStyle? style);
    method public abstract void text(String text, optional androidx.compose.ui.text.TextStyle? style, optional float weight);
    method public abstract void time();
  }

  public final class TouchTargetAwareSizeKt {
    method public static androidx.compose.ui.Modifier touchTargetAwareSize(androidx.compose.ui.Modifier, float size);
  }

  @androidx.compose.runtime.Immutable public final class Typography {
    ctor public Typography(optional androidx.compose.ui.text.font.FontFamily defaultFontFamily, optional androidx.compose.ui.text.TextStyle arcLarge, optional androidx.compose.ui.text.TextStyle arcMedium, optional androidx.compose.ui.text.TextStyle arcSmall, optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle bodyExtraSmall, optional androidx.compose.ui.text.TextStyle numeralExtraLarge, optional androidx.compose.ui.text.TextStyle numeralLarge, optional androidx.compose.ui.text.TextStyle numeralMedium, optional androidx.compose.ui.text.TextStyle numeralSmall, optional androidx.compose.ui.text.TextStyle numeralExtraSmall);
    method public androidx.wear.compose.material3.Typography copy(optional androidx.compose.ui.text.TextStyle arcLarge, optional androidx.compose.ui.text.TextStyle arcMedium, optional androidx.compose.ui.text.TextStyle arcSmall, optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle bodyExtraSmall, optional androidx.compose.ui.text.TextStyle numeralExtraLarge, optional androidx.compose.ui.text.TextStyle numeralLarge, optional androidx.compose.ui.text.TextStyle numeralMedium, optional androidx.compose.ui.text.TextStyle numeralSmall, optional androidx.compose.ui.text.TextStyle numeralExtraSmall);
    method public androidx.compose.ui.text.TextStyle getArcLarge();
    method public androidx.compose.ui.text.TextStyle getArcMedium();
    method public androidx.compose.ui.text.TextStyle getArcSmall();
    method public androidx.compose.ui.text.TextStyle getBodyExtraSmall();
    method public androidx.compose.ui.text.TextStyle getBodyLarge();
    method public androidx.compose.ui.text.TextStyle getBodyMedium();
    method public androidx.compose.ui.text.TextStyle getBodySmall();
    method public androidx.compose.ui.text.TextStyle getDisplayLarge();
    method public androidx.compose.ui.text.TextStyle getDisplayMedium();
    method public androidx.compose.ui.text.TextStyle getDisplaySmall();
    method public androidx.compose.ui.text.TextStyle getLabelLarge();
    method public androidx.compose.ui.text.TextStyle getLabelMedium();
    method public androidx.compose.ui.text.TextStyle getLabelSmall();
    method public androidx.compose.ui.text.TextStyle getNumeralExtraLarge();
    method public androidx.compose.ui.text.TextStyle getNumeralExtraSmall();
    method public androidx.compose.ui.text.TextStyle getNumeralLarge();
    method public androidx.compose.ui.text.TextStyle getNumeralMedium();
    method public androidx.compose.ui.text.TextStyle getNumeralSmall();
    method public androidx.compose.ui.text.TextStyle getTitleLarge();
    method public androidx.compose.ui.text.TextStyle getTitleMedium();
    method public androidx.compose.ui.text.TextStyle getTitleSmall();
    property public final androidx.compose.ui.text.TextStyle arcLarge;
    property public final androidx.compose.ui.text.TextStyle arcMedium;
    property public final androidx.compose.ui.text.TextStyle arcSmall;
    property public final androidx.compose.ui.text.TextStyle bodyExtraSmall;
    property public final androidx.compose.ui.text.TextStyle bodyLarge;
    property public final androidx.compose.ui.text.TextStyle bodyMedium;
    property public final androidx.compose.ui.text.TextStyle bodySmall;
    property public final androidx.compose.ui.text.TextStyle displayLarge;
    property public final androidx.compose.ui.text.TextStyle displayMedium;
    property public final androidx.compose.ui.text.TextStyle displaySmall;
    property public final androidx.compose.ui.text.TextStyle labelLarge;
    property public final androidx.compose.ui.text.TextStyle labelMedium;
    property public final androidx.compose.ui.text.TextStyle labelSmall;
    property public final androidx.compose.ui.text.TextStyle numeralExtraLarge;
    property public final androidx.compose.ui.text.TextStyle numeralExtraSmall;
    property public final androidx.compose.ui.text.TextStyle numeralLarge;
    property public final androidx.compose.ui.text.TextStyle numeralMedium;
    property public final androidx.compose.ui.text.TextStyle numeralSmall;
    property public final androidx.compose.ui.text.TextStyle titleLarge;
    property public final androidx.compose.ui.text.TextStyle titleMedium;
    property public final androidx.compose.ui.text.TextStyle titleSmall;
  }

}

package androidx.wear.compose.material3.lazy {

  public final class ScrollTransformKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier scrollTransform(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope scope);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier scrollTransform(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope scope, androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.painter.Painter painter, optional androidx.compose.foundation.BorderStroke? border);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier scrollTransform(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope scope, long backgroundColor, optional androidx.compose.ui.graphics.Shape shape);
  }

  public final class TargetMorphingHeightKt {
    method public static androidx.compose.ui.Modifier targetMorphingHeight(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope scope);
  }

}

