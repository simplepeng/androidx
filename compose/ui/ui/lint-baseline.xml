<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.9.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (8.9.0-alpha01)" variant="all" version="8.9.0-alpha01">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            rule.runOnUiThread { Thread.sleep(sleepTime) }"
        errorLine2="                                        ~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/input/pointer/AndroidPointerInputTest.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="    @InternalComposeUiApi"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/ComposeView.android.kt"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.S` is never true here"
        errorLine1="            if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.S) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/contentcapture/AndroidContentCaptureManager.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field children with type Map&lt;Integer, AutofillNode>: replace with IntObjectMap"
        errorLine1="    val children: MutableMap&lt;Int, AutofillNode> = mutableMapOf()"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/autofill/AutofillTree.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;Integer, AutofillNode> of getChildren: replace with IntObjectMap"
        errorLine1="    val children: MutableMap&lt;Int, AutofillNode> = mutableMapOf()"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/autofill/AutofillTree.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable deltas with type List&lt;? extends Offset>: replace with LongList"
        errorLine1="    val deltas ="
        errorLine2="    ^">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/platform/accessibility/CollectionInfo.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type List&lt;HapticFeedbackType> of values: replace with IntList"
        errorLine1="        fun values(): List&lt;HapticFeedbackType> ="
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/hapticfeedback/HapticFeedbackType.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field alignmentLineMap with type Map&lt;AlignmentLine, Integer>: replace with ObjectIntMap"
        errorLine1="    private val alignmentLineMap: MutableMap&lt;AlignmentLine, Int> = hashMapOf()"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/LayoutNodeAlignmentLines.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;AlignmentLine, Integer> of getLastCalculation: replace with ObjectIntMap"
        errorLine1="    fun getLastCalculation(): Map&lt;AlignmentLine, Int> = alignmentLineMap"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/LayoutNodeAlignmentLines.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;AlignmentLine, Integer> of getAlignmentLinesMap: replace with ObjectIntMap"
        errorLine1="    protected abstract val NodeCoordinator.alignmentLinesMap: Map&lt;AlignmentLine, Int>"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/LayoutNodeAlignmentLines.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;AlignmentLine, Integer> of calculateAlignmentLines: replace with ObjectIntMap"
        errorLine1="    fun calculateAlignmentLines(): Map&lt;AlignmentLine, Int>"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/LayoutNodeLayoutDelegate.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field oldAlignmentLines with type Map&lt;AlignmentLine, Integer>: replace with ObjectIntMap"
        errorLine1="    private var oldAlignmentLines: MutableMap&lt;AlignmentLine, Int>? = null"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/LookaheadDelegate.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;AlignmentLine, Integer> of getAlignmentLines: replace with ObjectIntMap"
        errorLine1="    val alignmentLines: Map&lt;AlignmentLine, Int>"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/MeasureResult.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method layout has parameter alignmentLines with type Map&lt;AlignmentLine, Integer>: replace with ObjectIntMap"
        errorLine1="        alignmentLines: Map&lt;AlignmentLine, Int> = emptyMap(),"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/layout/MeasureScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable alignmentLines with type Map&lt;AlignmentLine, ? extends Integer>: replace with ObjectIntMap"
        errorLine1="                val alignmentLines = coordinator._measureResult?.alignmentLines"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/node/NodeCoordinator.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;Integer, SemanticsNode> of getAllSemanticsNodesToMap: replace with IntObjectMap"
        errorLine1="): Map&lt;Int, SemanticsNode> {"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/semantics/SemanticsOwner.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable nodes with type Map&lt;Integer, SemanticsNode>: replace with IntObjectMap"
        errorLine1="    val nodes = mutableMapOf&lt;Int, SemanticsNode>()"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/semantics/SemanticsOwner.kt"/>
    </issue>

</issues>
