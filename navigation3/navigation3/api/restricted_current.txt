// Signature format: 4.0
package androidx.navigation3 {

  public final class EntryClassProvider<T> {
    ctor public EntryClassProvider(kotlin.reflect.KClass<T> clazz, java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public kotlin.reflect.KClass<T> component1();
    method public java.util.Map<java.lang.String,java.lang.Object> component2();
    method public kotlin.jvm.functions.Function1<T,kotlin.Unit> component3();
    method public androidx.navigation3.EntryClassProvider<T> copy(kotlin.reflect.KClass<T> clazz, java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public kotlin.reflect.KClass<T> getClazz();
    method public kotlin.jvm.functions.Function1<T,kotlin.Unit> getContent();
    method public java.util.Map<java.lang.String,java.lang.Object> getFeatureMap();
    property public final kotlin.reflect.KClass<T> clazz;
    property public final kotlin.jvm.functions.Function1<T,kotlin.Unit> content;
    property public final java.util.Map<java.lang.String,java.lang.Object> featureMap;
  }

  @kotlin.DslMarker public @interface EntryDsl {
  }

  public final class EntryProvider<T> {
    ctor public EntryProvider(T key, java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public T component1();
    method public java.util.Map<java.lang.String,java.lang.Object> component2();
    method public kotlin.jvm.functions.Function1<T,kotlin.Unit> component3();
    method public androidx.navigation3.EntryProvider<T> copy(T key, java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public kotlin.jvm.functions.Function1<T,kotlin.Unit> getContent();
    method public java.util.Map<java.lang.String,java.lang.Object> getFeatureMap();
    method public T getKey();
    property public final kotlin.jvm.functions.Function1<T,kotlin.Unit> content;
    property public final java.util.Map<java.lang.String,java.lang.Object> featureMap;
    property public final T key;
  }

  @androidx.navigation3.EntryDsl public final class EntryProviderBuilder {
    ctor public EntryProviderBuilder(kotlin.jvm.functions.Function1<java.lang.Object,? extends androidx.navigation3.NavEntry<? extends java.lang.Object?>> fallback);
    method public <T> void addEntryProvider(kotlin.reflect.KClass<T> clazz, optional java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public <T> void addEntryProvider(T key, optional java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public kotlin.jvm.functions.Function1<java.lang.Object,androidx.navigation3.NavEntry<? extends java.lang.Object?>> build();
  }

  public final class EntryProviderKt {
    method public static inline <reified T> void entry(androidx.navigation3.EntryProviderBuilder, optional java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public static <T> void entry(androidx.navigation3.EntryProviderBuilder, T key, optional java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public static inline kotlin.jvm.functions.Function1<java.lang.Object,androidx.navigation3.NavEntry<? extends java.lang.Object?>> entryProvider(optional kotlin.jvm.functions.Function1<java.lang.Object,? extends androidx.navigation3.NavEntry<? extends java.lang.Object?>> fallback, kotlin.jvm.functions.Function1<? super androidx.navigation3.EntryProviderBuilder,kotlin.Unit> builder);
  }

  public final class NavDisplay {
    method public java.util.Map<java.lang.String,java.lang.Object> isDialog(boolean boolean);
    method public java.util.Map<java.lang.String,java.lang.Object> transition(androidx.compose.animation.EnterTransition? enter, androidx.compose.animation.ExitTransition? exit);
    field public static final androidx.navigation3.NavDisplay INSTANCE;
  }

  public final class NavDisplay_androidKt {
    method @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<? extends T> backstack, optional androidx.compose.ui.Modifier modifier, optional java.util.List<? extends androidx.navigation3.NavLocalProvider> localProviders, optional androidx.compose.ui.Alignment contentAlignment, optional androidx.compose.animation.SizeTransform? sizeTransform, optional androidx.compose.animation.EnterTransition enterTransition, optional androidx.compose.animation.ExitTransition exitTransition, optional kotlin.jvm.functions.Function0<kotlin.Unit> onBack, kotlin.jvm.functions.Function1<? super T,? extends androidx.navigation3.NavEntry<? extends T>> entryProvider);
  }

  public final class NavEntry<T> {
    ctor public NavEntry(T key, optional java.util.Map<java.lang.String,?> featureMap, kotlin.jvm.functions.Function1<? super T,kotlin.Unit> content);
    method public kotlin.jvm.functions.Function1<T,kotlin.Unit> getContent();
    method public java.util.Map<java.lang.String,java.lang.Object> getFeatureMap();
    method public T getKey();
    property public final kotlin.jvm.functions.Function1<T,kotlin.Unit> content;
    property public final java.util.Map<java.lang.String,java.lang.Object> featureMap;
    property public final T key;
  }

  public interface NavLocalProvider {
    method @androidx.compose.runtime.Composable public default void ProvideToBackStack(java.util.List<?> backStack);
    method @androidx.compose.runtime.Composable public <T> void ProvideToEntry(androidx.navigation3.NavEntry<T> entry);
  }

  public final class NavWrapperManager {
    ctor public NavWrapperManager();
    ctor public NavWrapperManager(optional java.util.List<? extends androidx.navigation3.NavLocalProvider> navLocalProviders);
    method @androidx.compose.runtime.Composable public <T> void ContentForEntry(androidx.navigation3.NavEntry<T> entry);
    method @androidx.compose.runtime.Composable public void PrepareBackStack(java.util.List<?> backStack);
  }

  public final class NavWrapperManagerKt {
    method @androidx.compose.runtime.Composable public static androidx.navigation3.NavWrapperManager rememberNavWrapperManager(java.util.List<? extends androidx.navigation3.NavLocalProvider> navLocalProviders);
  }

  public final class SaveableStateNavLocalProvider implements androidx.navigation3.NavLocalProvider {
    ctor public SaveableStateNavLocalProvider();
    method @androidx.compose.runtime.Composable public <T> void ProvideToEntry(androidx.navigation3.NavEntry<T> entry);
  }

  public final class SavedStateNavLocalProvider implements androidx.navigation3.NavLocalProvider {
    method @androidx.compose.runtime.Composable public <T> void ProvideToEntry(androidx.navigation3.NavEntry<T> entry);
    field public static final androidx.navigation3.SavedStateNavLocalProvider INSTANCE;
  }

}

